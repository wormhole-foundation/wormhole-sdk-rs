name: CI

on:
    push:
        branches: [main]
    pull_request:

env:
    CARGO_TERM_COLOR: always

jobs:
    test:
        name: test ${{ matrix.rust }} ${{ matrix.flags }}
        runs-on: ubuntu-latest
        timeout-minutes: 30
        strategy:
            fail-fast: false
            matrix:
                rust: ["stable", "beta", "nightly"]
                flags: [
                    "",
                    "--features \"read-write\"",
                    "--features \"payloads\"",
                    "--features \"serde\""
                ]
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@master
              with:
                  toolchain: ${{ matrix.rust }}
            - uses: Swatinem/rust-cache@v2
            - name: test
              run: cargo test --workspace ${{ matrix.flags }}

    clippy:
        name: clippy ${{ matrix.flags }}
        runs-on: ubuntu-latest
        timeout-minutes: 30
        strategy:
            fail-fast: false
            matrix:
                flags: [
                    "",
                    "--features \"read-write\"",
                    "--features \"payloads\"",
                    "--features \"serde\""
                ]
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@clippy
            - run: cargo clippy --workspace --all-targets ${{ matrix.flags }}
              env:
                  RUSTFLAGS: -Dwarnings

    docs:
        name: docs
        runs-on: ubuntu-latest
        timeout-minutes: 30
        strategy:
            fail-fast: false
            matrix:
                flags: [
                    "",
                    "--features \"read-write\"",
                    "--features \"payloads\"",
                    "--features \"serde\""
                ]
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: rust-docs
            - run: cargo doc --workspace ${{ matrix.flags }} --no-deps --document-private-items
              env:
                  RUSTDOCFLAGS: "--cfg docsrs -D warnings"

    fmt:
        name: fmt
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: rustfmt
            - run: cargo fmt --all --check

    test-anchor:
        name: test ${{ matrix.rust }} -p wormhole-vaas --features "anchor" --no-default-features
        runs-on: ubuntu-latest
        timeout-minutes: 30
        strategy:
            fail-fast: false
            matrix:
                rust: ["stable", "beta", "nightly"]
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@master
              with:
                  toolchain: ${{ matrix.rust }}
            - uses: Swatinem/rust-cache@v2
            - run: cargo test -p wormhole-vaas --features anchor --no-default-features

    clippy-anchor:
        name: clippy ${{ matrix.flags }} -p wormhole-vaas --features "anchor" --no-default-features
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@clippy
            - run: cargo clippy -p wormhole-vaas --features anchor --no-default-features
              env:
                  RUSTFLAGS: -Dwarnings

    docs-anchor:
        name: doc -p wormhole-vaas --features "anchor" --no-default-features --no-deps --document-private-items
        runs-on: ubuntu-latest
        timeout-minutes: 30
        steps:
            - uses: actions/checkout@v3
            - uses: dtolnay/rust-toolchain@nightly
              with:
                  components: rust-docs
            - run: cargo doc -p wormhole-vaas --features "anchor" --no-default-features --no-deps --document-private-items
              env:
                  RUSTDOCFLAGS: "--cfg docsrs -D warnings"